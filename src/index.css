@import '@fontsource/outfit/300.css';
@import '@fontsource/outfit/400.css';
@import '@fontsource/outfit/500.css';
@import '@fontsource/outfit/600.css';

:root {
  /* Default theme variables (will be overridden by ThemeContext) */
  --background: #181818;
  --surface: #222;
  --surfaceLight: #2A2A2A;
  --primary: #4C566A;
  --accent: #5C7CFA;
  --success: #4CAF50;
  --error: #ff6b6b;
  --warning: #FFD700;
  --text: #fff;
  --textSecondary: #aaa;
  --border: #444;
  --borderLight: #333;
}

/* Universal transition for all elements to support smooth theme changes */
* {
  transition: background-color 0.5s cubic-bezier(0.4, 0, 0.2, 1),
              color 0.5s cubic-bezier(0.4, 0, 0.2, 1),
              border-color 0.5s cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Prevent text selection outside of input fields and textareas */
body, div, p, h1, h2, h3, h4, h5, h6, span, 
button, a, label, li, ul, ol, img, svg, header, 
footer, article, main, section, aside, nav {
  user-select: none; /* Standard */
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  cursor: default;
}

/* Allow text selection in input fields and textareas */
input, textarea, [contenteditable="true"] {
  user-select: text;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  cursor: text;
}

html, body, #root {
  height: 100%;
  margin: 0;
  padding: 0;
  background: var(--background);
  color: var(--text);
  font-family: 'Outfit', sans-serif;
}

body {
  overflow: hidden;
}

/* Flexbox layout with smooth transitions */
.app-container {
  display: flex;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

/* Sidebar transitions - simplified */
.sidebar {
  height: 100vh;
  background: transparent; /* Let the component handle background */
  flex-shrink: 0; /* Don't allow the sidebar to shrink */
  transition: width 0.3s ease;
  will-change: width;
}

.sidebar-content {
  width: 100%;
  height: 100%;
  animation: none;
}

/* Remove sidebar button animations */
.sidebar-button {
  /* No animations */
}

.sidebar-button:hover {
  /* No hover effects */
}

.sidebar-button::after {
  display: none;
}

/* Remove sidebar collapse/expand animation */
.sidebar-collapsed,
.sidebar-expanded {
  transform: none;
  animation: none;
}

/* Content area */
.content {
  flex-grow: 1; /* Take up remaining space */
  height: 100vh;
  overflow-y: auto;
  overflow-x: hidden;
  transition: all 0.3s ease;
  will-change: flex-basis;
  /* Hide scrollbar but keep functionality */
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.content::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* Task page styles */
.todo-page-container {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  padding: 32px 20px;
  box-sizing: border-box;
  animation: pageSlideIn 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.todo-list-title {
  font-size: 28px;
  font-weight: 600;
  margin-bottom: 32px;
  letter-spacing: 1px;
  text-transform: uppercase;
}

/* Task items */
.task-item-container {
  border-radius: 6px;
  overflow: hidden;
  margin-bottom: 16px;
}

.task-item {
  animation: slideIn 0.3s ease forwards;
  transform-origin: top;
  will-change: transform, opacity;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.task-checkbox {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  cursor: pointer;
  position: relative;
  transition: transform 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.task-checkbox:hover {
  transform: scale(1.1);
}

.task-checkbox:active {
  transform: scale(0.9);
}

/* Ripple effect for checkbox */
.task-checkbox::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  opacity: 0;
  transform: scale(0);
  transition: all 0.3s;
}

.task-checkbox:active::after {
  opacity: 1;
  transform: scale(1.2);
  transition: 0s;
}

/* Input styling */
input {
  outline: none !important; /* Remove default focus outline */
  box-shadow: none !important; /* Remove any default shadow */
}

input:focus {
  box-shadow: none !important;
  outline: none !important;
}

input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="search"] {
  background-color: var(--surfaceLight);
  color: var(--text);
  border: none;
  border-radius: 4px;
  padding: 8px 12px;
  font-family: 'Outfit', sans-serif;
  font-size: 16px;
  transition: all 0.2s ease;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="number"]:focus,
input[type="search"]:focus {
  background-color: var(--surface);
  border-color: var(--accent);
}

/* Task input */
.task-input {
  background: var(--surfaceLight);
  border-radius: 8px;
  margin-bottom: 24px;
  padding: 16px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  transition: box-shadow 0.3s ease;
}

.task-input:focus-within {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.task-input input {
  background: transparent;
  border: none;
  border-bottom: 1px solid var(--border);
  color: var(--text);
  font-family: 'Outfit', sans-serif;
  font-size: 16px;
  padding: 8px 4px;
  width: 100%;
  outline: none;
  transition: border-color 0.3s;
  border-radius: 0; /* Remove any border radius */
}

.task-input input:focus {
  border-color: var(--accent);
  box-shadow: none;
  outline: none;
}

.task-input-buttons {
  display: flex;
  gap: 12px;
  margin-top: 16px;
  position: relative;
}

.task-input-button {
  background: var(--surface);
  border: none;
  border-radius: 4px;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
  overflow: hidden;
}

.task-input-button:hover {
  background: var(--border);
  transform: translateY(-2px);
}

.task-input-button:active {
  transform: translateY(1px);
}

/* Add button styles */
.add-button {
  background: var(--primary);
  color: var(--text);
  border: none;
  border-radius: 4px;
  padding: 8px 16px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  font-family: 'Outfit', sans-serif;
  transition: all 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
  overflow: hidden;
}

.add-button:hover {
  background: var(--accent);
  transform: translateY(-2px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.add-button:active {
  transform: translateY(1px);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

.add-button::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%, -50%);
  transform-origin: 50% 50%;
}

.sort-dropdown {
  background: var(--surface);
  border: none;
  border-radius: 4px;
  color: var(--text);
  font-family: 'Outfit', sans-serif;
  padding: 8px 12px;
  margin-left: auto;
  display: block;
  margin-bottom: 16px;
  cursor: pointer;
  transition: background 0.2s;
}

.sort-dropdown:hover {
  background: var(--border);
}

/* Simple animation for elements */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Minimal DatePicker overrides for dark theme */
.react-datepicker {
  background-color: var(--surface) !important;
  color: var(--text) !important;
  border: 1px solid var(--border) !important;
  font-family: 'Outfit', sans-serif !important;
  width: fit-content !important;
  margin: 0 auto !important;
  display: flex !important;
}

.react-datepicker__month-container {
  background-color: var(--surface) !important;
  float: none !important;
  width: fit-content !important;
}

.react-datepicker__header {
  background-color: var(--surfaceLight) !important;
  border-bottom: 1px solid var(--border) !important;
  padding-top: 8px !important;
  width: fit-content !important;
}

.react-datepicker__navigation {
  top: 8px !important;
}

.react-datepicker__navigation--previous {
  left: 10px !important;
}

.react-datepicker__navigation--next {
  right: 10px !important;
}

.react-datepicker__current-month, 
.react-datepicker__day-name, 
.react-datepicker__day, 
.react-datepicker__time-name {
  color: var(--text) !important;
}

.react-datepicker__day--selected, 
.react-datepicker__day--keyboard-selected {
  background-color: var(--primary) !important;
}

.react-datepicker__day:hover {
  background-color: var(--surfaceLight) !important;
}

.react-datepicker__triangle,
.react-datepicker__triangle::before,
.react-datepicker__triangle::after {
  display: none !important;
}

/* Fix any whitespace issues */
.react-datepicker__month {
  margin: 0 !important;
  padding: 0 !important;
}

.date-picker-container {
  max-width: fit-content !important;
}

/* Time picker styles */
.react-datepicker__time-container {
  border-left: 1px solid var(--border) !important;
  width: 100px !important;
  background-color: var(--surface) !important;
}

.react-datepicker__header--time {
  background-color: var(--surfaceLight) !important;
  border-bottom: 1px solid var(--border) !important;
  padding: 8px 0 !important;
}

.react-datepicker__time {
  background-color: var(--surface) !important;
}

.react-datepicker__time-box {
  width: 100% !important;
}

.react-datepicker__time-list {
  background-color: var(--surface) !important;
  height: 150px !important;
}

.react-datepicker__time-list-item {
  color: var(--text) !important;
  background-color: var(--surface) !important;
  padding: 8px 10px !important;
  font-size: 14px !important;
  display: flex !important;
  justify-content: center !important;
}

.react-datepicker__time-list-item:hover {
  background-color: var(--surfaceLight) !important;
}

.react-datepicker__time-list-item--selected {
  background-color: var(--primary) !important;
  font-weight: bold !important;
}

/* Custom time picker styles for the wheel picker */
.time-wheel-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 16px 12px;
  background-color: var(--surface);
  border-radius: 8px;
  margin-top: 8px;
  border: 1px solid var(--border);
}

.time-wheel-header {
  width: 100%;
  text-align: center;
  color: var(--text);
  font-weight: 500;
  margin-bottom: 12px;
}

.time-wheel-picker {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
}

.time-wheel {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
  height: 120px;
  width: 60px;
  overflow: hidden;
}

.time-wheel-item {
  position: absolute;
  width: 100%;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  color: var(--text);
  transition: all 0.2s;
}

.time-wheel-selected {
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  transform: scale(1.1);
  font-weight: 500;
}

.time-wheel-indicator {
  position: absolute;
  width: calc(100% + 10px);
  height: 40px;
  border-top: 1px solid var(--borderLight);
  border-bottom: 1px solid var(--borderLight);
  pointer-events: none;
}

.time-wheel-separator {
  font-size: 20px;
  font-weight: 600;
  color: var(--text);
}

.time-period-selector {
  display: flex;
  flex-direction: column;
  margin-left: 10px;
}

.time-period-option {
  padding: 8px;
  cursor: pointer;
  color: var(--text);
  border-radius: 4px;
  font-size: 14px;
}

.time-period-option:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.time-period-selected {
  background-color: var(--primary);
  font-weight: 500;
}

/* Prevent text selection */
.date-picker-container,
.time-wheel-container,
.time-wheel-item,
.time-period-option,
.time-wheel {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

/* Adjust layout for side-by-side view */
.date-time-layout {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: center;
  gap: 10px;
}

@media (max-width: 600px) {
  .date-time-layout {
    flex-direction: column;
  }
}

/* Improve time wheel interaction */
.time-wheel {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
  height: 160px;
  width: 60px;
  overflow: hidden;
  cursor: grab;
  border-radius: 8px;
  background-color: var(--surfaceLight);
}

.time-wheel:active {
  cursor: grabbing;
}

.time-wheel-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 12px;
  background-color: var(--surface);
  border-radius: 8px;
  min-width: 120px;
  max-height: 290px;
  border: 1px solid var(--border);
}

.time-wheel-header {
  width: 100%;
  text-align: center;
  color: var(--text);
  font-weight: 500;
  margin-bottom: 12px;
}

.time-wheel-picker {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
}

.time-wheel-item {
  position: absolute;
  width: 100%;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  color: var(--text);
  transition: all 0.15s;
  z-index: 1;
}

.time-wheel-selected {
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  transform: scale(1.1);
  font-weight: 500;
  z-index: 2;
}

.time-wheel-indicator {
  position: absolute;
  width: calc(100% + 10px);
  height: 40px;
  border-top: 1px solid var(--borderLight);
  border-bottom: 1px solid var(--borderLight);
  pointer-events: none;
  z-index: 3;
}

.time-wheel-separator {
  font-size: 20px;
  font-weight: 600;
  color: var(--text);
}

.time-period-selector {
  display: flex;
  flex-direction: column;
  margin-left: 10px;
}

.time-period-option {
  padding: 8px;
  cursor: pointer;
  color: var(--text);
  border-radius: 4px;
  font-size: 14px;
  transition: background-color 0.2s;
}

.time-period-option:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.time-period-selected {
  background-color: var(--primary);
  font-weight: 500;
}

/* Drag and drop styles */
.task-dragging {
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5) !important;
  border-radius: 8px !important;
  background-color: var(--surfaceLight) !important;
  cursor: grabbing !important;
  z-index: 9999 !important;
  transition: transform 0.05s ease !important;
  animation: none !important;
}

/* Add dragging placeholder styles for smoother transitions */
.task-drag-placeholder {
  transition: transform 0.15s ease;
  animation: none;
}

/* Disable standard transitions during drag operations */
.dragging-active .task-item:not(.task-dragging) {
  transition: transform 0.15s ease !important;
}

.time-wheel-container {
  background-color: var(--surface);
  border-radius: 8px;
  padding: 16px;
  width: 200px;
  height: 240px;
  display: flex;
  flex-direction: column;
  border: 1px solid var(--border);
}

.time-wheel-header {
  text-align: center;
  font-weight: 500;
  margin-bottom: 16px;
  color: var(--text);
}

.time-wheel-picker {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.time-wheel {
  position: relative;
  height: 120px;
  width: 50px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.time-wheel-indicator {
  position: absolute;
  width: 100%;
  height: 40px;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  pointer-events: none;
}

.time-wheel-item {
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text);
  font-size: 18px;
  cursor: pointer;
  user-select: none;
  transition: transform 0.15s, opacity 0.15s;
}

.time-wheel-item.time-wheel-selected {
  font-weight: bold;
  color: var(--text);
}

.time-wheel-separator {
  font-size: 24px;
  color: var(--textSecondary);
  user-select: none;
  margin: 0 4px;
}

.time-period-selector {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.time-period-option {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--surfaceLight);
  border-radius: 4px;
  cursor: pointer;
  user-select: none;
  color: var(--text);
}

.time-period-option.time-period-selected {
  background: var(--primary);
  color: var(--text);
  font-weight: bold;
}

/* Mobile and touch support */
@media (pointer: coarse) {

  .task-item {
    touch-action: none; /* Prevent scrolling while dragging on touch devices */
  }
}

/* Add subtask button styles */
.add-subtask-button, .copy-title-button {
  opacity: 0;
  transition: opacity 0.2s;
}

.task-item:hover .add-subtask-button,
.task-item:hover .copy-title-button {
  opacity: 0.8;
}

.add-subtask-button:hover,
.copy-title-button:hover {
  opacity: 1;
  color: var(--text) !important;
}

/* Mobile and touch support */
@media (pointer: coarse) {
  .add-subtask-button,
  .copy-title-button {
    opacity: 0.6;
    padding: 8px;
  }

  .task-item {
    touch-action: none; /* Prevent scrolling while dragging on touch devices */
  }
}

/* Checkbox styling */
input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 18px;
  height: 18px;
  cursor: pointer;
  border: 2px solid var(--primary);
  border-radius: 3px;
  background-color: transparent;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  position: relative;
  outline: none;
}

input[type="checkbox"]:checked {
  background-color: var(--primary);
}

input[type="checkbox"]:checked::after {
  content: '';
  width: 6px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  position: absolute;
  transform: rotate(45deg);
  margin-bottom: 2px;
}

input[type="checkbox"]:hover {
  border-color: var(--accent);
  box-shadow: 0 0 3px rgba(92, 107, 138, 0.4);
}

input[type="checkbox"]:focus {
  border-color: var(--accent);
  box-shadow: 0 0 0 3px rgba(92, 107, 138, 0.3);
}

/* Specific styles for starred checkbox */
#editTaskStarred, #taskStarred {
  border-color: var(--warning);
}

#editTaskStarred:checked, #taskStarred:checked {
  background-color: var(--warning);
}

#editTaskStarred:hover, #taskStarred:hover {
  border-color: var(--warning);
  box-shadow: 0 0 3px rgba(255, 215, 0, 0.4);
}

#editTaskStarred:focus, #taskStarred:focus {
  border-color: var(--warning);
  box-shadow: 0 0 0 3px rgba(255, 215, 0, 0.3);
}

/* Toggle Switch */
.toggle-switch {
  position: relative;
  display: inline-block;
  width: 48px;
  height: 24px;
}

.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--surface);
  border: 1px solid var(--border);
  transition: .3s;
  border-radius: 24px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
  overflow: hidden;
}

.toggle-slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 2px;
  background-color: var(--textSecondary);
  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  border-radius: 50%;
  z-index: 2;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
}

/* Add ripple effect */
.toggle-slider:after {
  content: "";
  position: absolute;
  height: 12px;
  width: 12px;
  left: 6px;
  bottom: 5px;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  transform: scale(0);
  transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  opacity: 0;
}

input:checked + .toggle-slider {
  background-color: var(--primary);
  border-color: var(--primary);
}

input:checked + .toggle-slider:before {
  transform: translateX(22px);
  background-color: white;
}

input:checked + .toggle-slider:after {
  transform: scale(6);
  opacity: 1;
  transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1), opacity 0.3s;
  left: 2px;
}

input:focus + .toggle-slider {
  box-shadow: 0 0 2px var(--primary);
}

input:active + .toggle-slider:before {
  width: 22px;  /* Squish effect when pressed */
  transition: width 0.1s, transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

input:checked:active + .toggle-slider:before {
  transform: translateX(18px);
}

/* Theme selection preview */
.theme-preview-container {
  transition: all 0.3s ease;
}

.theme-preview-container:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
}

.theme-preview {
  cursor: pointer;
  border-radius: 8px;
  overflow: hidden;
  border: 2px solid transparent;
  transition: all 0.2s ease;
}

.theme-preview.active {
  border-color: var(--accent);
}

/* Add any additional styles you need here */

/* Modal input styling */
.modal-input {
  width: calc(100% - 24px);
  padding: 8px 12px;
  background-color: var(--surfaceLight);
  border: 1px solid transparent;
  border-radius: 4px;
  color: var(--text);
  font-size: 16px;
  font-family: 'Outfit', sans-serif;
  box-sizing: border-box;
  transition: all 0.2s ease;
}

.modal-input:focus {
  background-color: var(--surface);
  border-color: var(--accent);
  outline: none;
  box-shadow: none;
}

.task-input-field {
  background: transparent;
  border: none;
  border-bottom: 1px solid var(--border);
  color: var(--text);
  font-family: 'Outfit', sans-serif;
  font-size: 16px;
  padding: 8px 4px;
  width: 100%;
  outline: none;
  transition: border-color 0.3s;
  border-radius: 0;
}

.task-input-field:focus {
  border-color: var(--accent);
  box-shadow: none;
  outline: none;
}

/* Simple page transition for settings */
@keyframes pageSlideIn {
  from {
    opacity: 0;
    transform: translateX(15px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Settings page animation */
.settings-page {
  animation: pageSlideIn 0.3s ease;
}

.sticky-date-time-container {
  position: sticky;
  top: 24px;
  z-index: 10;
  background: var(--surface);
  border-radius: 18px;
  box-shadow: 0 4px 16px rgba(0,0,0,0.10), 0 1.5px 4px rgba(0,0,0,0.06);
  padding: 18px 28px 14px 28px;
  margin: 24px auto 32px auto;
  max-width: 420px;
  min-width: 220px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  border: 1px solid var(--borderLight);
}

@media (max-width: 600px) {
  .sticky-date-time-container {
    left: 0;
    right: 0;
    margin-left: 12px;
    margin-right: 12px;
    max-width: calc(100vw - 24px);
    padding: 14px 10px 10px 16px;
  }
}

.date-time-wrapper {
  margin-bottom: 24px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  background: none;
  box-shadow: none;
  border-radius: 0;
  border: none;
  padding: 0;
  position: relative;
  left: 0;
  top: 0;
  max-width: none;
  min-width: 0;
  z-index: 10;
  transition: background 0.3s, box-shadow 0.3s, border-radius 0.3s, padding 0.3s, margin 0.3s;
}

.date-time-wrapper.sticky-popped {
  position: sticky;
  top: 24px;
  left: 0;
  background: var(--surface);
  border-radius: 18px;
  box-shadow: 0 4px 16px rgba(0,0,0,0.10), 0 1.5px 4px rgba(0,0,0,0.06);
  padding: 14px 18px 10px 18px;
  margin: 24px 0 32px 0;
  max-width: 340px;
  min-width: 180px;
  width: fit-content;
  border: 1px solid var(--borderLight);
}

@media (max-width: 600px) {
  .date-time-wrapper.sticky-popped {
    left: 0;
    right: 0;
    margin-left: 8px;
    margin-right: 8px;
    max-width: calc(100vw - 16px);
    padding: 10px 6px 8px 10px;
    min-width: 0;
  }
}
